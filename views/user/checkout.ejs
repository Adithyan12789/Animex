		<!DOCTYPE HTML>
		<html>

		<head>
			<title>Animex</title>
			<meta charset="utf-8">
			<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

			<link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700" rel="stylesheet">
			<link href="https://fonts.googleapis.com/css?family=Rokkitt:100,300,400,700" rel="stylesheet">
			<link rel="icon" href="/static/images/unnamed.jpg">

			<!-- Animate.css -->
			<link rel="stylesheet" href="/static/css/animate.css">
			<!-- Icomoon Icon Fonts-->
			<link rel="stylesheet" href="/static/css/icomoon.css">
			<!-- Ion Icon Fonts-->
			<link rel="stylesheet" href="/static/css/ionicons.min.css">
			<!-- Bootstrap  -->
			<link rel="stylesheet" href="/static/css/bootstrap.min.css">

			<!-- Magnific Popup -->
			<link rel="stylesheet" href="/static/css/magnific-popup.css">

			<!-- Flexslider  -->
			<link rel="stylesheet" href="/static/css/flexslider.css">

			<!-- Owl Carousel -->
			<link rel="stylesheet" href="/static/css/owl.carousel.min.css">
			<link rel="stylesheet" href="/static/css/owl.theme.default.min.css">

			<!-- Date Picker -->
			<link rel="stylesheet" href="/static/css/bootstrap-datepicker.css">
			<!-- Flaticons  -->
			<link rel="stylesheet" href="/static/fonts/flaticon/font/flaticon.css">

			<!-- Theme style  -->
			<link rel="stylesheet" href="/static/css/style.css">

			<script src="https://kit.fontawesome.com/c3933791eb.js" crossorigin="anonymous"></script>


			<!-- Include SweetAlert2 library -->
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
			<!-- Include Razorpay checkout library -->
			<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

			<style>
				.buttons {
    background-color: #007bff; /* Green background */
    border: none; /* Remove borders */
    color: white; /* White text */
    padding: 5px 15px; /* Padding */
    text-align: center; /* Center text */
    text-decoration: none; /* Remove underline */
    display: inline-block; /* Make it into a block */
    font-size: 16px; /* Font size */
    margin: 4px 2px; /* Margin */
    cursor: pointer; /* Cursor pointer */
    border-radius: 8px; /* Rounded corners */
}

.buttons:hover {
    background-color: #45a049; /* Darker green */
}

				.toggle_info {
    margin-bottom: 20px;
}

.toggle-link {
    color: #007bff;
    text-decoration: none;
    cursor: pointer;
}

.panel-body {
    background-color: #f9f9f9;
    padding: 20px;
    border-radius: 5px;
}

.font-sm {
    font-size: 14px;
}

.coupon-input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 14px;
}

.btn-primary {
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
}

.btn-secondary {
    background-color: #6c757d;
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
}

.btn-primary:hover, .btn-secondary:hover {
    opacity: 0.8;
}


				.radio-box {
					display: flex;
				}
		
				.prod-img {
					position: relative;
					display: inline-block;
					overflow: hidden;
				}
		
				.addressBox {
					padding: 50px;
				}
		
				.addressBox h2 {
					color: #333;
					margin-bottom: 20px;
					border-bottom: 2px solid #88c8bc;
					padding-bottom: 10px;
				}
		
				p {
					color: black;
					font-weight: 400;
				}
		
				.prod-img i {
					position: absolute;
					top: 310px;
					right: 25px;
					font-size: 24px;
					color: #fff;
					z-index: 2;
					transition: transform 0.3s ease;
					/* Added transition property */
				}
		
				.prod-img i:hover {
					transform: scale(1.1);
				}
		
				.prod-img:hover img {
					transform: scale(1.1);
					transition: transform 0.3s ease;
				}
		
				.address-box {
					background: #fff;
					border-radius: 8px;
					box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
					padding: 20px;
					margin-bottom: 20px;
				}
		
				.address-box h3 {
					color: #333;
					font-size: 1.2rem;
					margin-bottom: 15px;
					border-bottom: 2px solid #88c8bc;
					padding-bottom: 10px;
				}
		
				.address-details p {
					color: #000000;
					margin-bottom: 10px;
					font-size: 0.9rem;
					line-height: 1.6;
					font-weight: 500;
				}
		
				.action-buttons {
					margin-left: 40px;
				}
		
				/* View Details Button */
				.view-details {
					background-color: #007bff;
					/* Blue color, you can adjust as needed */
					color: #fff;
					/* Text color */
					padding: 10px 20px;
					/* Add some padding for better spacing */
					border: none;
					/* Remove border */
					border-radius: 5px;
					/* Rounded corners */
					transition: background-color 0.3s ease;
					/* Smooth transition */
				}
		
				.view-details:hover {
					background-color: #0056b3;
					/* Darker shade on hover */
				}
		
				/* Add to Cart Icon Button */
				.btn-update {
					background-color: #28a745;
					/* Green color for add to cart button */
					color: #fff;
					/* Text color */
					padding: 10px 20px;
					/* Adjust padding */
					border: none;
					/* Remove border */
					border-radius: 5px;
					/* Rounded corners */
					cursor: pointer;
					/* Show pointer on hover */
					transition: background-color 0.3s ease;
					/* Smooth transition */
				}
		
				.btn-update:hover {
					background-color: #218838;
					/* Darker shade of green on hover */
				}
		
				.profile-info {
					background: #fff;
					border-radius: 10px;
					padding: 50px;
					max-width: 800px;
					box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
					position: relative;
				}
		
				.profile-info h3 {
					color: #333;
					margin-bottom: 20px;
					border-bottom: 2px solid #88c8bc;
					padding-bottom: 10px;
				}
		
				.profile-info p {
					color: #000000;
					margin-bottom: 15px;
					line-height: 1.6;
					font-weight: 500;
				}
		
				.colorlib-product {
					padding: 7em 0 0 0;
					clear: both;
				}
		
				/* Payment method styles */
				.payment-options {
					margin-bottom: 20px;
				}
		
				.payment-label {
					display: block;
					position: relative;
					padding-left: 35px;
					margin-bottom: 12px;
					cursor: pointer;
					font-size: 18px;
					user-select: none;
				}
		
				.payment-label input {
					position: absolute;
					opacity: 0;
					cursor: pointer;
				}
		
				.checkmark {
					position: absolute;
					top: 0;
					left: 0;
					height: 25px;
					width: 25px;
					background-color: #eee;
					border-radius: 50%;
				}
		
				.payment-label:hover input~.checkmark {
					background-color: #ccc;
				}
		
				.payment-label input:checked~.checkmark {
					background-color: #2196F3;
				}
		
				.checkmark:after {
					content: "";
					position: absolute;
					display: none;
				}
		
				.payment-label input:checked~.checkmark:after {
					display: block;
				}
		
				.payment-label .checkmark:after {
					left: 9px;
					top: 5px;
					width: 7px;
					height: 14px;
					border: solid white;
					border-width: 0 3px 3px 0;
					transform: rotate(45deg);
				}
				label{
					font-weight: 500;
				}
				/* Modal Styles */
				.modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    /* Modal Content Styles */
    .modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 20px;
        border-radius: 10px;
        width: 30%;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
        position: relative;
        overflow: hidden;
        font-family: 'Arial', sans-serif;
    }

    /* Close Button Styles */
    .close {
        color: #aaa;
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 20px;
        cursor: pointer;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
    }

    /* Coupon Styles */
    .coupon {
        border: 2px dashed #f0f0f0;
        background-color: #f9f9f9;
        padding: 15px;
        margin-bottom: 15px;
        border-radius: 5px;
    }

    .coupon h3 {
        color: #333;
        font-size: 20px;
        margin-bottom: 5px;
    }

    .coupon p {
        color: #666;
        font-size: 16px;
        margin: 0;
    }
			</style>

		</head>

		<body>

			<div class="colorlib-loader"></div>

			<div id="page">
				<nav class="colorlib-nav" role="navigation">
					<div class="top-menu">
						<div class="container">
							<div class="row">
								<div class="col-sm-7 col-md-9">
									<div id="colorlib-logo"><a href="/">Animex</a></div>
								</div>
								<div class="col-sm-5 col-md-3">
									<form action="#" class="search-wrap">
										<div class="form-group">
											<input type="search" class="form-control search" placeholder="Search">
											<button class="btn btn-primary submit-search text-center" type="submit"><i
													class="icon-search"></i></button>
										</div>
									</form>
								</div>
							</div>
							<div class="row">
								<div class="col-sm-12 text-left menu-1">
									<ul>
										<li class="active"><a href="/">Home</a></li>
										<li><a href="/shop">Shop</a></li>
										<li><a href="/about">About</a></li>
										<li><a href="/contact">Contact</a></li>
										<li style="float: right;"><a href="/profile"><i
													class="fa-regular fa-circle-user fa-2x"></i></a></li>
													<li style="float: right;"><a href="/wishlist"><i class="fa-regular fa-heart fa-2x"></i></a></li>
										<li class="cart"><a href="/cart"><i class="icon-shopping-cart"></i> Cart [<%= count %>]</a></li>
										<li class="logout"><a href="userlogout"><i class="fas fa-sign-out-alt fa-lg"></i> Logout</a></li>

									</ul>
								</div>
							</div>
						</div>
					</div>
					<div class="sale">
						<div class="container">
							<div class="row">
								<div class="col-sm-8 offset-sm-2 text-center">
									<div class="row">
										<div class="owl-carousel2">
											<div class="item">
												<div class="col">
													<h3><a href="#">25% off (Almost) Everything! Use Code: Summer Sale</a></h3>
												</div>
											</div>
											<div class="item">
												<div class="col">
													<h3><a href="#">Our biggest sale yet 50% off all T-shirt</a></h3>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</nav>

				<div class="breadcrumbs">
					<div class="container">
						<div class="row">
							<div class="col">
								<p class="bread"><span><a href="index.html">Home</a></span> / <span>Checkout</span></p>
							</div>
						</div>
					</div>
				</div>


				<form id="orderForm" action="/order" method="POST">
					<!-- Billing details -->
					<div class="colorlib-product">
						<div class="container">
							<div class="row">
								<!-- Billing Details -->
								<div class="col-lg-5">
									<div class="col-md-12">
										<div class="profile-info">
											<h3>Billing Details</h3>
											<p><i class="fas fa-user"></i> Name: <%= user.name %></p>
											<p><i class="fa-solid fa-envelope"></i> Email: <%= user.email %></p>
											<p><i class="fas fa-phone"></i> Phone: <%= user.mobile %></p>
										</div>
									</div>
									<div class="row addressBox">
										<h3 class="checkout__title">Select Address</h3>
										<div class="col-md-12">
											<% if (checkout && checkout.addressDetails && checkout.addressDetails.length > 0) { %>
												<% checkout.addressDetails.forEach((address, index) => { %>
													<div class="address-box" id="address<%= index + 1 %>">
														<label>
															<div class="radio-box">
																<input style="margin: 3px 20px 32px 0px;" type="radio" name="addressId" value="<%= address._id %>" <%= index === 0 ? 'checked' : '' %>>
																<h3 onclick="toggleAddressDetails('<%= index + 1 %>', '<%= address._id %>')">Address <%= index + 1 %></h3>
															</div>
														</label>
														<div class="address-details">
															<p>Address: <%= address.address1 %></p>
															<p>Street Name: <%= address.address2 %></p>
															<p>City: <%= address.city %></p>
															<p>State: <%= address.state %></p>
															<p>Postal Code: <%= address.postalCode %></p>
															<p>Country: <%= address.country %></p>
														</div>
													</div>
												<% }) %>
											<% } else { %>
												<p>No address found</p>
											<% } %>
										</div>										
									</div>
									
								</div>
								<div class="col-lg-7">
									<div class="row">
										<div class="w-100"></div>
										<div class="col-md-12">
											<div class="cart-detail">
												<div class="form-group">
													<div class="col-md-12">
														<h3>Product Details:</h3>
														<br>
														<% if (product && product.length > 0) { %>
															<% product.forEach((item, index) => { %>
																<div class="row">
																	<div class="col-md-1">
																		<p><%= index + 1 %>.</p>
																	</div>
																	<div class="col-md-2">
																		<img style="width: 70px;" src="/static/uploads/<%= item.product.image[0] %>" alt="Product Image">
																	</div>
																	<div class="col-md-3">
																		<p><%= item.product.name %></p>
																	</div>
																	<div class="col-md-3">
																		<p>Price: ₹<%= item.product.price %></p>
																	</div>
																	<div class="col-md-3">
																		<p>Quantity: <%= item.quantity %></p>
																	</div>
																</div>
																<br>
															<% }) %>
														<% } else { %>
															<p>No items in the cart</p>
														<% } %>
													</div>
												</div>	
												<div class="row">
													<div class="col-md-8"></div>
													<div class="col-lg-4 text-center">
														<div class="total">
															<div class="sub">
																<p class="discount-label">Discount - <span id="discount" class="discount-value">₹0</span></p>
																<input type="hidden" name="couponDiscount" id="discount-item">
															</div>
															<div class="sub">
																<p class="discount-label">Delivery Fee - ₹<span class="discount-value">55</span></p>
															</div>
															<div class="grand-total cart__total text-center">
																<p class="total-label">Total - ₹<span id="total" class="total-value"><%= totalPrice + 55 %></span></p>
															</div>
														</div>
													</div>
												</div>												
												
												<br>	
												<hr>											
												<br>

												<button class="buttons" id="openModal" type="button">Show Coupons</button><br>
												<div id="couponModal" class="modal">
													<div class="modal-content">
														<span class="close" style="font-size: 35px;">&times;</span>
														<h2>Available Coupons</h2>
														<% if (coupons) { %>
															<% coupons.forEach(coupon => { %>
																<div class="coupon">
																	<h3><%= coupon.description %></h3>
																	<p>Coupon Code: <strong><%= coupon.coupon_code %></strong></p>
																</div>
															<% }); %>
														<% }else{ %>
															<p>There is no coupons</p>
														<% } %>
													</div>
												</div>
												
												<div class="col-lg-12 mt-4">
													<div class="toggle_info">
														<span>
															<i class="fi-rs-label mr-10"></i>
															<span class="text-muted">Coupon Actions</span> 
															<a href="#" id="toggleCoupon" class="collapsed toggle-link">Click here to manage your coupon</a>
														</span>
													</div>
													<div class="panel-collapse collapse coupon_form" id="couponActions">
														<div class="panel-body">
															<p class="mb-30 font-sm">Manage your coupon below.</p>
															<div class="form-group">
																<input type="text" name="couponCode" id="couponCode" placeholder="Enter Coupon Code..." class="form-control coupon-input">
															</div>
															<div class="form-group">
																<button class="btn btn-md btn-primary" id="applyCouponBtn">Apply Coupon</button>
																<button class="btn btn-md btn-secondary" id="cancelCouponBtn">Cancel</button>
															</div>
														</div>
													</div>
												</div>

																											
												<br>
												<hr>
												<h3>Payment Method</h3>
												<br>
												<div class="checkout__input__checkbox">

													<label for="payment-cod">
													  Cash on Delivery
													  <input
														type="checkbox"
														id="payment-cod"
														name="paymentMethod"
														value="Cash on Delivery"
													  />
													</label>
												  </div>
												  <div class="checkout__input__checkbox">
													<label for="payment-razorpay">
													  Razorpay
													  <input
														type="checkbox"
														id="payment-razorpay"
														name="paymentMethod"
														value="Razorpay"
													  />
													  
													</label>
												  </div>
												
												  <div class="checkout__input__checkbox">
													  <label for="payment-wallet">
														  Wallet
														  <input
															  type="checkbox"
															  id="payment-wallet"
															  name="paymentMethod"
															  value="Wallet"
														  />
														  <span
														id="check-error"
														style="font-size: 14px; margin-top: -5px"
													  ></span>
													  </label>
												  </div>
												
											</div>
										</div>
									</div>

									<% if (checkout) { %>
										<input
										  type="hidden"
										  name="addressID"
										  value="<%= checkout._id %>"
										/>
										<% } %>
										<input
										  type="hidden"
										  id="paymentStatus"
										  name="paymentStatus"
										/>
										<input
										  type="hidden"
										  name="cartItems"
										/>
										<input
										  type="hidden"
										  id="subtotal"
										  name="totalPrice"
										  value="<%= totalPrice + 55 %>"
										/>
										
										<input type="hidden" name="subtotal" id="subtotalInput" value="<%= totalPrice + 55 %>">
										<input type="hidden" id="discountAmountInput" name="discountAmount" value="">
										<input type="hidden" id="couponCodeInput" name="couponCode" value="">
						  
										<input type="hidden" name="orderId" value="<%= orderId %>">
									<div class="row">
										<div class="col-md-12 text-center">
											<div class="col-md-12 text-center">
												<button type="submit" class="btn btn-primary">Place an order</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</form>

				<div class="container">
					
					<div class="action-buttons">
						<a href="/addAddress"><button class="btn btn-primary">Add New Address</button></a>
					</div>
				</div>
				
				</div>

				<footer id="colorlib-footer" role="contentinfo">
					<div class="container">
						<div class="row row-pb-md">
							<div class="col footer-col colorlib-widget">
								<h4>About Footwear</h4>
								<p>Even the all-powerful Pointing has no control about the blind texts it is an almost
									unorthographic life</p>
								<p>
								<ul class="colorlib-social-icons">
									<li><a href="#"><i class="icon-twitter"></i></a></li>
									<li><a href="#"><i class="icon-facebook"></i></a></li>
									<li><a href="#"><i class="icon-linkedin"></i></a></li>
									<li><a href="#"><i class="icon-dribbble"></i></a></li>
								</ul>
								</p>
							</div>
							<div class="col footer-col colorlib-widget">
								<h4>Customer Care</h4>
								<p>
								<ul class="colorlib-footer-links">
									<li><a href="#">Contact</a></li>
									<li><a href="#">Returns/Exchange</a></li>
									<li><a href="#">Gift Voucher</a></li>
									<li><a href="#">Wishlist</a></li>
									<li><a href="#">Special</a></li>
									<li><a href="#">Customer Services</a></li>
									<li><a href="#">Site maps</a></li>
								</ul>
								</p>
							</div>
							<div class="col footer-col colorlib-widget">
								<h4>Information</h4>
								<p>
								<ul class="colorlib-footer-links">
									<li><a href="#">About us</a></li>
									<li><a href="#">Delivery Information</a></li>
									<li><a href="#">Privacy Policy</a></li>
									<li><a href="#">Support</a></li>
									<li><a href="#">Order Tracking</a></li>
								</ul>
								</p>
							</div>

							<div class="col footer-col">
								<h4>News</h4>
								<ul class="colorlib-footer-links">
									<li><a href="blog.html">Blog</a></li>
									<li><a href="#">Press</a></li>
									<li><a href="#">Exhibitions</a></li>
								</ul>
							</div>

							<div class="col footer-col">
								<h4>Contact Information</h4>
								<ul class="colorlib-footer-links">
									<li>291 South 21th Street, <br> Suite 721 New York NY 10016</li>
									<li><a href="tel://1234567920">+ 1235 2355 98</a></li>
									<li><a href="mailto:info@yoursite.com">info@yoursite.com</a></li>
									<li><a href="#">yoursite.com</a></li>
								</ul>
							</div>
						</div>
					</div>
					<div class="copy">
						<div class="row">
							<div class="col-sm-12 text-center">
								<p>
									<span><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
										Copyright &copy;
										<script>document.write(new Date().getFullYear());</script> All rights reserved | This
										template is made with <i class="icon-heart" aria-hidden="true"></i> by <a
											href="https://colorlib.com" target="_blank">Colorlib</a>
										<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
									</span>
									<span class="block">Demo Images: <a href="http://unsplash.co/" target="_blank">Unsplash</a>
										, <a href="http://pexels.com/" target="_blank">Pexels.com</a></span>
								</p>
							</div>
						</div>
					</div>
				</footer>
			</div>

			<div class="gototop js-top">
				<a href="#" class="js-gotop"><i class="ion-ios-arrow-up"></i></a>
			</div>

			
		<!-- JavaScript imports -->
		<script src="/static/js/jquery.min.js"></script>
		<script src="/static/js/popper.min.js"></script>
		<script src="/static/js/bootstrap.min.js"></script>
		<script src="/static/js/jquery.easing.1.3.js"></script>
		<script src="/static/js/jquery.waypoints.min.js"></script>
		<script src="/static/js/jquery.flexslider-min.js"></script>
		<script src="/static/js/owl.carousel.min.js"></script>
		<script src="/static/js/jquery.magnific-popup.min.js"></script>
		<script src="/static/js/magnific-popup-options.js"></script>
		<script src="/static/js/bootstrap-datepicker.js"></script>
		<script src="/static/js/jquery.stellar.min.js"></script>
		<script src="/static/js/main.js"></script>

		<!-- Your custom scripts here -->

		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

		
		


			<script>
				function order(id) {
					Swal.fire({
						title: "place order",
						showCancelButton: false,
						confirmButtonColor: "#3085d6",
						cancelButtonColor: "#d33",
						confirmButtonText: "ok"
					}).then((result) => {
						if (result.isConfirmed) {
							window.location.href = "/order";
						}
					});
				}
			</script>

	<script>
		function toggleAddressDetails(addressIndex, addressId) {
			var addressDetails = document.getElementById('address' + addressIndex).getElementsByClassName('address-details')[0];
			if (addressDetails.style.display === 'none') {
				addressDetails.style.display = 'block';
			} else {
				addressDetails.style.display = 'none';
			}

			// Call setDefault function to update default address
			setDefault(addressId);
		}

		function setDefault(addressId) {
			// Make AJAX request to update default address
			fetch('/defaultAddress', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ addressId: addressId })
			})
			.then(response => {
				if (response.ok) {
					console.log('Default address updated successfully');
				} else {
					console.error('Error updating default address:', response.statusText);
				}
			})
			.catch(error => {
				console.error('Error updating default address:', error);
			});
		}
	</script>

<script>
    document.getElementById("openModal").addEventListener("click", function() {
      document.getElementById("couponModal").style.display = "block";
    });
    
    document.getElementsByClassName("close")[0].addEventListener("click", function() {
      document.getElementById("couponModal").style.display = "none";
    });
</script>


<script>

	
   document.addEventListener("DOMContentLoaded", function() {
    const toggleCoupon = document.getElementById("toggleCoupon");
    const couponSection = document.getElementById("couponActions");

    toggleCoupon.addEventListener("click", function(event) {
        event.preventDefault();
        couponSection.classList.toggle("show");
    });

    const applyCouponBtn = document.getElementById("applyCouponBtn");

    applyCouponBtn.addEventListener("click", function(event) {
        event.preventDefault();
        const couponCode = document.getElementById("couponCode").value;
        applyCoupon(couponCode);
    });

    function applyCoupon(couponCode) {
    // Check if the coupon code is already applied
    const appliedCouponCode = document.getElementById('couponCode').getAttribute('data-applied-coupon');
    if (appliedCouponCode === couponCode) {
        // If the same coupon is already applied, show an error message
        Swal.fire({
            title: 'Error!',
            text: 'Coupon is already applied.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return; // Exit the function
    }

    fetch('/apply-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ couponCode })
    })
    .then(response => {
        if (!response.ok) {
            Swal.fire({
                title: 'Error!',
                text: 'Failed to apply coupon',
                icon: 'error',
                confirmButtonText: 'OK'
            });
            throw new Error('Failed to apply coupon');
        }
        return response.json();
    })
    .then(data => {
        console.log('Coupon applied successfully');
        const newTotalPrice = data.newTotalPrice.toFixed(2);
        const discount = data.discount.toFixed(2);
        console.log(newTotalPrice)
        document.getElementById('total').innerText = newTotalPrice;
        document.getElementById('discount').innerText = discount;
        document.getElementById('subtotal').value = newTotalPrice;
        document.getElementById('discount-item').value = discount;
        // Set the applied coupon code to the data attribute
        document.getElementById('couponCode').setAttribute('data-applied-coupon', couponCode);
        Swal.fire({
            title: 'Success!',
            text: data.message,
            icon: 'success',
            confirmButtonText: 'OK'
        });
    }) 
    .catch(error => {
        console.error('Error applying coupon:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Error applying coupon',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    });
}

});
	</script>
	
	<script>
	document.addEventListener('DOMContentLoaded', function () {
    const cancelCouponBtn = document.getElementById('cancelCouponBtn');
    if (cancelCouponBtn) {
        cancelCouponBtn.addEventListener('click', function () {
            const couponCode = document.getElementById('couponCode').value; // Get the coupon code
            cancelCoupon(couponCode); // Pass the coupon code to the cancelCoupon function
        });
    }
});

function cancelCoupon(couponCode) {
    fetch('/cancel-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ couponCode }) // Pass the coupon code in the request body
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Failed to cancel coupon');
        }
        return response.json();
    })
    .then(data => {
        console.log('Coupon canceled successfully');
        const originalTotalPrice = data.originalTotalPrice.toFixed(2);
        console.log(originalTotalPrice)
        document.getElementById('total').innerText = originalTotalPrice;
        document.getElementById('discount').innerText = 0;
        document.getElementById('subtotal').value = originalTotalPrice;
        Swal.fire({
            title: 'Successfully Cancelled!',
            text: data.message,
            icon: 'success',
            confirmButtonText: 'OK'
        });
    })
    .catch(error => {
        console.error('Error canceling coupon:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Error canceling coupon',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    });
}

	</script>

	

<script>
	var checkError = document.getElementById("check-error");


	function validateForms() {
    var addressSelected = document.querySelector('input[name="addressId"]:checked');
    var paymentSelected = document.querySelector('input[name="paymentMethod"]:checked');
    if (!addressSelected) {
        // Use SweetAlert2 for the alert
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select an address!',
        });
        return false; // Prevent form submission
    }else if(!paymentSelected){
		// Use SweetAlert2 for the alert
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select an Payment Method!',
        });
        return false; // Prevent form submission
	}else {
        validateForm()
    }
}
  
	function validateForm() {
	const paymentCODCheckbox = document.getElementById("payment-cod");
	const paymentRazorpayCheckbox = document.getElementById("payment-razorpay");
	const paymentWalletCheckbox = document.getElementById("payment-wallet");
	const paymentStatusInput = document.getElementById("paymentStatus");
	
	const checkedCount = [paymentCODCheckbox, paymentRazorpayCheckbox, paymentWalletCheckbox].filter(checkbox => checkbox.checked).length;
  
	// Retrieve the subtotal element by ID
const totalPriceInput = document.getElementById("subtotal");

// Parse the inner text of the subtotal element as a floating-point number
const totalPrice = parseFloat(totalPriceInput.value);

// Check if the parsed value is a valid number
if (!isNaN(totalPrice)) {
    // Log the parsed total price
    console.log("Parsed total price:", totalPrice);
} else {
    console.error("Unable to parse total price as a number.");
}

  
	if (checkedCount !== 1) {
	  checkError.style.display = "block";
	  checkError.innerHTML = "Please select only one payment method";
	  checkError.style.color = "red";
	  setTimeout(function () {
		checkError.style.display = "none";
	  }, 3000);
	  return false;
	}
	else if (totalPrice > 2000 && paymentCODCheckbox.checked) {
	  paymentStatusInput.value = "Pending";
	  checkError.style.display = "block";
	  checkError.innerHTML = "COD is not available for orders above Rs 2000.";
	  checkError.style.color = "red";
	  setTimeout(function () {
		checkError.style.display = "none";
	  }, 3000);
	  return false;
	} else if (!paymentCODCheckbox.checked && !paymentRazorpayCheckbox.checked && !paymentWalletCheckbox.checked) {
	  checkError.style.display = "block";
	  checkError.innerHTML = "Please select a payment method";
	  checkError.style.color = "red";
	  setTimeout(function () {
		checkError.style.display = "none";
	  }, 3000);
	  return false;
	}  else if (paymentRazorpayCheckbox.checked) {
	  initiateRazorpayPayment();
	  return false;
	  } else if (paymentCODCheckbox.checked) {
		paymentStatusInput.value = "Pending";
		Swal.fire({
		  title: "Are you sure?",
		  text: "Do you want to place the order?",
		  icon: "question",
		  showCancelButton: true,
		  confirmButtonColor: "#3085d6",
		  cancelButtonColor: "#d33",
		  confirmButtonText: "Yes, place order",
		}).then((result) => {
		  if (result.isConfirmed) {
			console.log("Order placed");
			document.getElementById('paymentStatus').value = 'Pending';
			document.getElementById("orderForm").submit();
		  }
		});
		return false;
	  }else  if (paymentWalletCheckbox.checked){
                fetch('/check-wallet-balance')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const walletBalance = data.balance;
							console.log(walletBalance)
							console.log(totalPrice)
                            if (totalPrice <= walletBalance) {
                                document.getElementById('paymentStatus').value = 'Paid';
                                Swal.fire({
                                    title: "Are you sure?",
                                    text: "Do you want to place the order?",
                                    icon: "question",
                                    showCancelButton: true,
                                    confirmButtonColor: "#3085d6",
                                    cancelButtonColor: "#d33",
                                    confirmButtonText: "Yes, place order",
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        console.log("Order placed");
                                        withdrawFunds()
                                        // document.getElementById("orderForm").submit();
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Insufficient Wallet Balance',
                                    text: 'Your wallet balance is not sufficient to complete the transaction.',
                                    showConfirmButton: true
                                });
                            }
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Failed to fetch wallet balance. Please try again later.',
                                showConfirmButton: true
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                return false;
            }
	}
  
	document.getElementById("orderForm").addEventListener("submit", function (event) {
	  event.preventDefault();
  
	  validateForms();
	});

	// require('dotenv').config(); // Import dotenv to use environment variables
	
  
	function initiateRazorpayPayment() {
	  const user = {
		name: "<%= user.name %>",
		email: "<%= user.email %>",
		phone: "<%= user.mobile %>",
	  };
	 
	  const totalPriceInput = document.getElementById("subtotal");
		const totalPrice = parseFloat(totalPriceInput.value);
  
	  console.log(totalPrice);

	//   const total = totalPrice + 55
  
	  var options = {
		key: `<%= razorpayKey %>`,
		amount: totalPrice * 100,
		currency: "INR",
		name: "Animex",
		description: "Purchase Description",
		image: "/static/images/Anime-Logo-PNG-Images.png",
		
		handler: function (response) {
		  console.log(response);
		  if (response.razorpay_payment_id) {
          console.log("Payment successful");
          document.getElementById('paymentStatus').value = 'Paid';
        } else {
          console.log("Payment failed or canceled");
          document.getElementById('paymentStatus').value = 'Failed';
        }
		  submitForm();
		},
  
		prefill: {
		  name: user.name,
		  email: user.email,
		  contact: user.phone,
		},
		theme: {
		  color: "#3399cc",
		},
	  };
  
	  var rzp = new Razorpay(options);
  
	  rzp.on('payment.failed', function (response) {
      console.log("Payment failed:", response);
      document.getElementById('paymentStatus').value = 'Failed';
      submitForm();
      });
  
	  rzp.open();
	}
  
	function submitForm() {
	  const form = document.getElementById("orderForm");
	  form.submit();
	}

	async function withdrawFunds() {
    const totalPrice = document.getElementById("subtotal");
    const amount = parseFloat(totalPrice.value);
    console.log(amount);
    if (!isNaN(amount)) {
        const response = await fetch('/withdrawFunds', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ amount })
        });
        document.getElementById("orderForm").submit();
        const data = await response.json();
        if (data.success) {
            balanceDisplay.textContent = `Balance: ₹${data.balance}`;
            
            // Format the date correctly
            const currentDate = new Date();
            const formattedDate = currentDate.toLocaleString(); // Adjust date formatting as needed
            
            addTransaction({ date: formattedDate, type: 'withdraw', amount });
            document.getElementById('withdraw-amount').value = '';
        } else {
            alert(data.message);
        }
    } else {
        alert("Invalid amount!");
    }
}

  
  </script>




		</body>

		</html>